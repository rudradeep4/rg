{"version":3,"sources":["theme.js","me2.svg","MainImg.js","components/MatlabIcon.js","components/RIcon.js","components/CompSci.js","components/Projects.js","components/SocialLinks.js","routes/LandingPage.js","routes/LandingPageMobile.js","App.js","index.js"],"names":["theme","extendTheme","fonts","heading","body","MainImg","props","src","mainImg","h","w","MatlabIcon","rel","href","class","RIcon","CompSci","close","ref","React","useRef","useOutsideClick","handler","textColor","fontFamily","fontSize","pt","fontWeight","pb","bgColor","borderColor","spacing","MotionLinkBox","motion","LinkBox","MotionText","Text","MotionImage","Image","Projects","useMediaQuery","isLargeScreen","useOverlayDisp","useState","details","setDetails","showDetails","hideDetails","textVariants","visible","opacity","hidden","imgVariants","bardoDts","sg8Dts","textAlign","py","onMouseOver","onMouseOut","isExternal","ratio","AnimatePresence","pl","pr","color","pos","variants","initial","animate","exit","alt","objectFit","borderRadius","SocialLinks","icon","size","_hover","_active","MotionFlex","Flex","LandingPage","useDisclosure","isOpenCV","isOpen","onOpenCV","onOpen","onCloseCV","onClose","isOpenProjects","onOpenProjects","onCloseProjects","onClick","divider","leftIcon","bg","variant","LandingPageMobile","isOpenAbout","onOpenAbout","onCloseAbout","placement","App","GlobalStyles","css","styles","minH","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2509e384.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst theme = extendTheme({\r\n  fonts: {\r\n    heading: \"Inconsolata\",\r\n    body: \"Inconsolata\",\r\n  },\r\n})\r\n\r\nexport default theme","export default __webpack_public_path__ + \"static/media/me2.75af680b.svg\";","import React from 'react';\r\nimport { Image } from '@chakra-ui/react';\r\nimport mainImg from './me2.svg';\r\n\r\nexport const MainImg = props => {\r\n  return <Image src={mainImg} h={300} w={300}/>;\r\n};\r\n","const MatlabIcon = () => {\r\n    return (\r\n        <div>\r\n            <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/devicon.min.css\"></link>\r\n            <i class=\"devicon-matlab-plain\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatlabIcon","const RIcon = () => {\r\n    return (\r\n        <div>\r\n            <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/devicon.min.css\"></link>\r\n            <i class=\"devicon-r-original\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RIcon","import {\r\n    Box,\r\n    Text,\r\n    VStack,\r\n    HStack,\r\n    Divider,\r\n    useOutsideClick,\r\n} from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { FaBrain } from 'react-icons/fa'\r\nimport { SiPython, SiJavascript, SiReact, SiJava, SiFlutter, SiUnity, SiTensorflow, SiAdobeillustrator } from 'react-icons/si'\r\nimport MatlabIcon from './MatlabIcon'\r\nimport RIcon from './RIcon'\r\n\r\nconst CompSci = ({close}) => {\r\n    const ref = React.useRef()\r\n    useOutsideClick({\r\n        ref: ref,\r\n        handler: () => close()\r\n    })\r\n\r\n    return (\r\n        <Box ref={ref} textColor=\"black\" fontFamily=\"Inconsolata\" fontSize=\"sm\">\r\n            <VStack>\r\n                <Text pt={10} fontSize=\"lg\" fontWeight=\"semibold\">Rudradeep Guha</Text>\r\n                <Text pb={10} fontSize=\"lg\" fontWeight=\"semibold\">Cognitive science, coder</Text>\r\n                <Text fontSize=\"md\">M.Sc. Cognitive Science</Text>\r\n                <Text fontSize=\"md\">National Research University Higher School of Economics</Text>\r\n                <Text fontSize=\"md\">Moscow, Russia</Text>\r\n                <Divider bgColor=\"black\" borderColor=\"black\" pt={1} />\r\n                <Text fontWeight=\"semibold\">Thesis:</Text>\r\n                <Text>Novel Word Learning in Native and Non-Native Orthographies</Text>\r\n                <HStack><FaBrain /><Text>EEG</Text></HStack>\r\n                \r\n                <Text pt={20} fontSize=\"md\">B.Sc. Computer Science</Text>\r\n                <Text fontSize=\"md\">Ashoka University</Text>\r\n                <Text fontSize=\"md\">New Delhi, India</Text>\r\n                <Divider bgColor=\"black\" borderColor=\"black\" pt={1} />\r\n                <Text fontWeight=\"semibold\">Skills:</Text>\r\n                <HStack spacing={10}>\r\n                    <VStack>\r\n                        <HStack><SiPython /><Text>Python</Text></HStack>\r\n                        <HStack><SiJavascript /><Text>Javascript</Text></HStack>\r\n                        <HStack><SiJava /><Text>Java</Text></HStack>\r\n                        <HStack><MatlabIcon /><Text>MATLAB</Text></HStack>\r\n                        <HStack><RIcon /><Text>R</Text></HStack>\r\n                    </VStack>\r\n                    <VStack>\r\n                        <HStack><SiReact /><Text>React.js</Text></HStack>\r\n                        <HStack><SiFlutter /><Text>Flutter</Text></HStack>\r\n                        <HStack><SiTensorflow /><Text>TensorFlow</Text></HStack>\r\n                        <HStack><SiAdobeillustrator /><Text>Illustrator</Text></HStack>\r\n                        <HStack><SiUnity /><Text>Unity 3D</Text></HStack>\r\n                    </VStack>\r\n                </HStack>\r\n            </VStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CompSci","import {\r\n    Box,\r\n    Text,\r\n    AspectRatio,\r\n    Image,\r\n    LinkBox,\r\n    LinkOverlay,\r\n    useOutsideClick,\r\n    useMediaQuery\r\n} from '@chakra-ui/react'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\nimport React, { useState } from 'react'\r\n\r\nconst MotionLinkBox = motion(LinkBox)\r\nconst MotionText = motion(Text)\r\nconst MotionImage = motion(Image)\r\n\r\nconst Projects = ({close}) => {\r\n\r\n    const [isLargeScreen] = useMediaQuery(\"(min-width: 768px)\")\r\n\r\n    const ref = React.useRef()\r\n    useOutsideClick({\r\n        ref: ref,\r\n        handler: () => close()\r\n    })\r\n\r\n    const useOverlayDisp = () => {\r\n        const [details, setDetails] = useState(false)\r\n\r\n        const showDetails = () => {\r\n            setDetails(true)\r\n        }\r\n        const hideDetails = () => {\r\n            setDetails(false)\r\n        }\r\n\r\n        return {\r\n            details,\r\n            showDetails,\r\n            hideDetails\r\n        }\r\n    }\r\n\r\n    const textVariants = {\r\n        visible: {opacity: 1},\r\n        hidden: {opacity: 0}\r\n    }\r\n\r\n    const imgVariants = {\r\n        visible: {opacity: 1},\r\n        hidden: {opacity: 0.1}\r\n    }\r\n\r\n    const bardoDts = useOverlayDisp()\r\n    const sg8Dts = useOverlayDisp()\r\n\r\n    return (\r\n        <Box ref={ref} w={[null, 400]} textAlign=\"center\">\r\n            <Text py={10} fontSize=\"lg\" fontWeight=\"semibold\">Projects</Text>\r\n            <MotionLinkBox \r\n                pb={10} \r\n                onMouseOver={isLargeScreen ? bardoDts.showDetails : null} \r\n                onMouseOut={isLargeScreen ? bardoDts.hideDetails : null}\r\n            >\r\n                {isLargeScreen \r\n                    ?   null \r\n                    :   <Text fontSize=\"sm\" fontWeight=\"semibold\">\r\n                            Bardo Capital<br />An initial design for a hedge fund that prides itself on simplicity and a minimalist ethos.\r\n                        </Text>\r\n                }\r\n                <LinkOverlay href=\"http://bardocap.herokuapp.com\" isExternal>\r\n                    <AspectRatio ratio={16/9} >\r\n                        <Box>\r\n                            <AnimatePresence>\r\n                                {bardoDts.details && (\r\n                                    <MotionText \r\n                                        pl={5} \r\n                                        pr={5} \r\n                                        fontSize=\"sm\"\r\n                                        fontWeight=\"semibold\" \r\n                                        color=\"white\" \r\n                                        pos=\"absolute\" \r\n                                        variants={textVariants} \r\n                                        initial=\"hidden\" \r\n                                        animate=\"visible\" \r\n                                        exit=\"hidden\"\r\n                                    >\r\n                                        Bardo Capital<br /><br />An initial design for a hedge fund that prides itself on simplicity and a minimalist ethos.\r\n                                    </MotionText>\r\n                                )}\r\n                            </AnimatePresence>\r\n                            <MotionImage \r\n                                src='./bardocap.png' \r\n                                alt=\"Bardo Preview Photo\" \r\n                                objectFit=\"contain\" \r\n                                borderRadius=\"md\" \r\n                                variants={imgVariants} \r\n                                initial={bardoDts.details ? \"visible\" : \"hidden\"} \r\n                                animate={bardoDts.details ? \"hidden\" : \"visible\"} \r\n                            />\r\n                        </Box>\r\n                    </AspectRatio>\r\n                </LinkOverlay>\r\n            </MotionLinkBox>\r\n\r\n            <MotionLinkBox \r\n                onMouseOver={isLargeScreen ? sg8Dts.showDetails : null} \r\n                onMouseOut={isLargeScreen ? sg8Dts.hideDetails : null}\r\n            >\r\n                {isLargeScreen \r\n                    ?   null \r\n                    :   <Text fontSize=\"sm\" fontWeight=\"semibold\">\r\n                            SG8<br />A portfolio website for a financial analyst and trader.\r\n                        </Text>\r\n                }\r\n                <LinkOverlay href=\"http://sg8.vercel.app\" isExternal>\r\n                    <AspectRatio ratio={16/9} >\r\n                        <Box>\r\n                            <AnimatePresence>\r\n                                {sg8Dts.details && (\r\n                                    <MotionText \r\n                                        pl={5} \r\n                                        pr={5} \r\n                                        fontSize=\"sm\"\r\n                                        fontWeight=\"semibold\" \r\n                                        color=\"white\" \r\n                                        pos=\"absolute\" \r\n                                        variants={textVariants} \r\n                                        initial=\"hidden\" \r\n                                        animate=\"visible\"\r\n                                        exit=\"hidden\"\r\n                                    >\r\n                                        SG8<br /><br />A portfolio website for a financial analyst and trader. \r\n                                    </MotionText>\r\n                                )}\r\n                            </AnimatePresence>\r\n                            <MotionImage \r\n                                src='./sg8.png' \r\n                                alt=\"SG8 Preview Photo\" \r\n                                objectFit=\"contain\" \r\n                                borderRadius=\"md\" \r\n                                variants={imgVariants} \r\n                                initial={sg8Dts.details ? \"visible\" : \"hidden\"} \r\n                                animate={sg8Dts.details ? \"hidden\" : \"visible\"} \r\n                            />\r\n                        </Box>\r\n                    </AspectRatio>\r\n                </LinkOverlay>\r\n            </MotionLinkBox>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Projects","import {\r\n    Link,\r\n    IconButton,\r\n    HStack\r\n} from '@chakra-ui/react'\r\nimport { SiLinkedin, SiGmail } from 'react-icons/si'\r\nimport { VscGithub } from 'react-icons/vsc'\r\n\r\nconst SocialLinks = () => {\r\n    return (\r\n        <HStack>\r\n            <Link pr={1} href=\"mailto:rudradeep4@gmail.com\" isExternal>\r\n                <IconButton\r\n                aria-label=\"Email\" \r\n                icon={<SiGmail />} \r\n                size=\"md\" \r\n                bgColor=\"#FA7B62\" \r\n                _hover={{bgColor:\"#FA7B62\", textColor: \"white\"}}\r\n                _active={{bgColor:\"#FA7B62\", textColor:\"white\"}}\r\n                />\r\n            </Link>\r\n            <Link href=\"https://linkedin.com/in/rudradeep4\" isExternal>\r\n                <IconButton\r\n                aria-label=\"LinkedIn\" \r\n                icon={<SiLinkedin />} \r\n                size=\"md\" \r\n                bgColor=\"#FA7B62\" \r\n                _hover={{bgColor:\"#FA7B62\", textColor: \"white\"}}\r\n                _active={{bgColor:\"#FA7B62\", textColor:\"white\"}}\r\n                />\r\n            </Link>\r\n            <Link href=\"https://github.com/rudradeep4\" isExternal>\r\n                <IconButton \r\n                aria-label=\"Github\" \r\n                icon={<VscGithub />} \r\n                size=\"lg\" \r\n                bgColor=\"#FA7B62\" \r\n                _hover={{bgColor:\"#FA7B62\", textColor:\"white\"}}\r\n                _active={{bgColor:\"#FA7B62\", textColor:\"white\"}}\r\n                />\r\n            </Link>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from 'react';\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Center,\r\n  Button,\r\n  StackDivider,\r\n  useDisclosure,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  CloseButton,\r\n} from '@chakra-ui/react';\r\nimport { MainImg } from '../MainImg';\r\nimport CompSci from '../components/CompSci'\r\nimport Projects from '../components/Projects';\r\nimport SocialLinks from '../components/SocialLinks';\r\nimport { BsPersonFill } from 'react-icons/bs'\r\nimport { VscProject } from 'react-icons/vsc'\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\n\r\nconst MotionFlex = motion(Flex)\r\n\r\nconst LandingPage = () => {\r\n\r\n    const { \r\n        isOpen: isOpenCV,\r\n        onOpen: onOpenCV,\r\n        onClose: onCloseCV\r\n    } = useDisclosure()\r\n\r\n    const {\r\n        isOpen: isOpenProjects,\r\n        onOpen: onOpenProjects,\r\n        onClose: onCloseProjects,\r\n    } = useDisclosure()\r\n\r\n    const aboutVariants = {\r\n        visible: {opacity: 1},\r\n        hidden: {opacity: 0}\r\n    }\r\n\r\n    const projVariants = {\r\n        visible: {opacity: 1},\r\n        hidden: {opacity: 0}\r\n    }\r\n\r\n    return (\r\n        <Flex>\r\n            <Box pl={5} w={1/3}>\r\n                <AnimatePresence>\r\n                    {isOpenCV && (\r\n                        <MotionFlex variants={aboutVariants} initial=\"hidden\" animate=\"visible\" exit=\"hidden\">\r\n                            <CompSci close={onCloseCV} />\r\n                            <CloseButton onClick={onCloseCV} />\r\n                        </MotionFlex>\r\n                    )}\r\n                </AnimatePresence>\r\n            </Box>\r\n\r\n            <Center w={1/3}>\r\n                <VStack>\r\n                    <MainImg />\r\n                    <HStack spacing={5} pt={20} pb={3} divider={<StackDivider borderColor=\"black\" />}>\r\n                        <Button  \r\n                            onClick={onOpenCV} \r\n                            leftIcon={<BsPersonFill />} \r\n                            size=\"md\" \r\n                            _hover={{bg:'#FA7B62', textColor:'white'}}\r\n                            textColor=\"black\" \r\n                            variant=\"link\"\r\n                        >\r\n                            About Me\r\n                        </Button>\r\n                        <Button  \r\n                            onClick={onOpenProjects} \r\n                            leftIcon={<VscProject />} \r\n                            size=\"md\" \r\n                            _hover={{bg:'#FA7B62', textColor:'white'}}\r\n                            textColor=\"black\" \r\n                            variant=\"link\"\r\n                        >\r\n                            Projects\r\n                        </Button>\r\n                    </HStack>\r\n                    <SocialLinks />\r\n                </VStack>\r\n            </Center>\r\n\r\n            <Box pr={5} w={1/3}>\r\n                <AnimatePresence>\r\n                    {isOpenProjects && (\r\n                        <MotionFlex variants={projVariants} initial=\"hidden\" animate=\"visible\" exit=\"hidden\">\r\n                            <Spacer />\r\n                            <Projects close={onCloseProjects} />\r\n                            <CloseButton onClick={onCloseProjects} />\r\n                        </MotionFlex>\r\n                    )}\r\n                </AnimatePresence>\r\n            </Box>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\r\nimport {\r\n    Box,\r\n    VStack,\r\n    Center,\r\n    Button,\r\n    useDisclosure,\r\n    HStack,\r\n    StackDivider,\r\n    Drawer,\r\n    DrawerCloseButton,\r\n    DrawerBody,\r\n    DrawerContent,\r\n} from '@chakra-ui/react';\r\nimport { MainImg } from '../MainImg';\r\nimport SocialLinks from '../components/SocialLinks';\r\nimport CompSci from '../components/CompSci'\r\nimport { BsPersonFill } from 'react-icons/bs'\r\nimport { VscProject } from 'react-icons/vsc'\r\nimport Projects from '../components/Projects';\r\n\r\nconst LandingPageMobile = () => {\r\n\r\n    const { isOpen: isOpenAbout, onOpen: onOpenAbout, onClose: onCloseAbout } = useDisclosure()\r\n    const { isOpen: isOpenProjects, onOpen: onOpenProjects, onClose: onCloseProjects } = useDisclosure()\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Center pt={75}>\r\n                <VStack>\r\n                    <MainImg />\r\n                    <HStack spacing={5} pt={20} pb={3} divider={<StackDivider borderColor=\"black\" />}>\r\n                        <Button  \r\n                            onClick={onOpenAbout} \r\n                            leftIcon={<BsPersonFill />} \r\n                            size=\"md\" \r\n                            _hover={{bg:'#FA7B62', textColor:'white'}}\r\n                            textColor=\"black\" \r\n                            variant=\"link\"\r\n                        >\r\n                            About Me\r\n                        </Button>\r\n                        <Button  \r\n                            onClick={onOpenProjects} \r\n                            leftIcon={<VscProject />} \r\n                            size=\"md\" \r\n                            _hover={{bg:'#FA7B62', textColor:'white'}}\r\n                            textColor=\"black\" \r\n                            variant=\"link\"\r\n                        >\r\n                            Projects\r\n                        </Button>\r\n                    </HStack>\r\n                    <SocialLinks />\r\n                </VStack>\r\n            </Center>\r\n\r\n            <Drawer\r\n                isOpen={isOpenAbout}\r\n                placement=\"left\"\r\n                size=\"md\"\r\n                onClose={onCloseAbout}\r\n            >\r\n                <DrawerContent>\r\n                <DrawerCloseButton />\r\n                <DrawerBody bg=\"#FA7B62\">\r\n                    <CompSci close={onCloseAbout} />\r\n                </DrawerBody>\r\n                </DrawerContent>\r\n            </Drawer>\r\n\r\n            <Drawer\r\n                isOpen={isOpenProjects}\r\n                placement=\"right\"\r\n                size=\"md\"\r\n                onClose={onCloseProjects}\r\n            >\r\n                <DrawerContent>\r\n                <DrawerCloseButton />\r\n                <DrawerBody bg=\"#FA7B62\">\r\n                    <Projects close={onCloseProjects} />\r\n                </DrawerBody>\r\n                </DrawerContent>\r\n            </Drawer>            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LandingPageMobile","import React from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Grid,\n  useMediaQuery\n} from '@chakra-ui/react';\nimport '@fontsource/inconsolata'\nimport theme from './theme'\nimport { Global, css } from '@emotion/react'\nimport LandingPage from './routes/LandingPage';\nimport LandingPageMobile from './routes/LandingPageMobile'\n\n\nfunction App() {\n\n  const GlobalStyles = css`\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n     outline: none !important;\n     box-shadow: none !important;\n  }`\n\n  const [isLargeScreen] = useMediaQuery(\"(min-width: 768px)\")\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Global styles={GlobalStyles} />\n      <Box bgColor=\"#FA7B62\" textAlign=\"center\" fontSize=\"xl\">\n        <Grid minH=\"100vh\" p={3}>\n            {\n              isLargeScreen ? <LandingPage /> : <LandingPageMobile />\n            }\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"focus-visible/dist/focus-visible\"\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}